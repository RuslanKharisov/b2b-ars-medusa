name: Medusa B2B Deploy

on:
  push:
    branches:
      - main # Убедитесь, что это имя вашей основной ветки (например, master)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        # Выгружает код из вашего репозитория
        uses: actions/checkout@v4

      - name: Copy project files to server
        # Используем action для копирования файлов по SCP
        uses: appleboy/scp-action@v0.1.4 # Проверьте наличие более новой версии, если хотите
        with:
          host: ${{ secrets.SSH_HOST }} # IP-адрес сервера из секретов GitHub
          username: ${{ secrets.SSH_USER }} # Имя пользователя SSH из секретов GitHub
          key: ${{ secrets.SERVER_SSH_KEY }} # Приватный SSH-ключ из секретов GitHub
          port: ${{ secrets.SSH_PORT }} # Порт SSH из секретов GitHub (опционально, по умолчанию 22)
          source: "./" # Копируем все файлы и папки из корня репозитория
          target: "/home/admin2/ars-backend" # Целевая директория на сервере
          # Опционально: исключите определенные директории/файлы при копировании
          # exclude: ".git,.github,node_modules,dist"

      - name: Configure and Restart Medusa service
        # Используем action для выполнения команды по SSH
        uses: appleboy/ssh-action@v1.0.0 # Проверьте наличие более новой версии, если хотите
        with:
          host: ${{ secrets.SSH_HOST }} # IP-адрес сервера из секретов GitHub
          username: ${{ secrets.SSH_USER }} # Имя пользователя SSH из секретов GitHub
          key: ${{ secrets.SERVER_SSH_KEY }} # Приватный SSH-ключ из секретов GitHub
          port: ${{ secrets.SSH_PORT }} # Порт SSH из секретов GitHub (опционально, по умолчанию 22)

          script: |
            echo "Executing deployment script on server..."

            # Переходим в директорию проекта на сервере
            cd /home/admin2/ars-backend || { echo "Error: Directory /home/admin2/ars-backend not found"; exit 1; }   

            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 22.13.1

            echo "Running yarn install..."
            yarn install --immutable --immutable-cache || { echo "Error: yarn install failed"; exit 1; }

            echo "Running build..."
            yarn build || { echo "Error: build failed"; exit 1; }
              
            echo "Installing server dependencies..."
            cd .medusa/server && yarn install
              
            echo "Restoring .env..."
            if [ -f /home/admin2/secrets/.env-backend ]; then
              cp /home/admin2/secrets/.env-backend .env
              echo ".env restored"
            else
              echo "No .env-backend to copy"
            fi

            echo "Installing server dependencies..."
            yarn predeploy

            echo "Restarting Medusa server..."
            pm2 restart medusa-admin || { echo "Error: Failed to restart 'medusa-server'"; exit 1; }



            echo "Deployment script finished."
